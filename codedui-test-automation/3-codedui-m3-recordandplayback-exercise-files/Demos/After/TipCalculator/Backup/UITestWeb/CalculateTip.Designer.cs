// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 11.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace UITestWeb.CalculateTipClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public partial class CalculateTip
    {
        
        /// <summary>
        /// AssertNetherlands200BadService - Use 'AssertNetherlands200BadServiceExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertNetherlands200BadService()
        {
            #region Variable Declarations
            HtmlEdit uITxtTotalAmountEdit = this.UIHttplocalhosttipCalcWindow.UIHttplocalhosttipCalcDocument.UITxtTotalAmountEdit;
            #endregion

            // Verify that the 'Text' property of 'txtTotalAmount' text box equals '210'
            Assert.AreEqual(this.AssertNetherlands200BadServiceExpectedValues.UITxtTotalAmountEditText, uITxtTotalAmountEdit.Text);
        }
        
        /// <summary>
        /// CalculateNetherlands200 - Use 'CalculateNetherlands200Params' to pass parameters into this method.
        /// </summary>
        public void CalculateNetherlands200()
        {
            #region Variable Declarations
            HtmlComboBox uIDdlCountryComboBox = this.UIHttplocalhosttipCalcWindow.UIHttplocalhosttipCalcDocument.UIDdlCountryComboBox;
            HtmlEdit uITxtBilAMountEdit = this.UIHttplocalhosttipCalcWindow.UIHttplocalhosttipCalcDocument.UITxtBilAMountEdit;
            HtmlComboBox uIDdlQOSComboBox = this.UIHttplocalhosttipCalcWindow.UIHttplocalhosttipCalcDocument.UIDdlQOSComboBox;
            HtmlInputButton uICalculateTipButton = this.UIHttplocalhosttipCalcWindow.UIHttplocalhosttipCalcDocument.UICalculateTipButton;
            #endregion

            // Select 'Netherlands' in 'ddlCountry' combo box
            uIDdlCountryComboBox.SelectedItem = this.CalculateNetherlands200Params.UIDdlCountryComboBoxSelectedItem;

            // Type '200' in 'txtBilAMount' text box
            uITxtBilAMountEdit.Text = this.CalculateNetherlands200Params.UITxtBilAMountEditText;

            // Select 'Bad' in 'ddlQOS' combo box
            uIDdlQOSComboBox.SelectedItem = this.CalculateNetherlands200Params.UIDdlQOSComboBoxSelectedItem;

            // Click 'Calculate Tip' button
            Mouse.Click(uICalculateTipButton, new Point(36, 10));
        }
        
        #region Properties
        public virtual AssertNetherlands200BadServiceExpectedValues AssertNetherlands200BadServiceExpectedValues
        {
            get
            {
                if ((this.mAssertNetherlands200BadServiceExpectedValues == null))
                {
                    this.mAssertNetherlands200BadServiceExpectedValues = new AssertNetherlands200BadServiceExpectedValues();
                }
                return this.mAssertNetherlands200BadServiceExpectedValues;
            }
        }
        
        public virtual CalculateNetherlands200Params CalculateNetherlands200Params
        {
            get
            {
                if ((this.mCalculateNetherlands200Params == null))
                {
                    this.mCalculateNetherlands200Params = new CalculateNetherlands200Params();
                }
                return this.mCalculateNetherlands200Params;
            }
        }
        
        public UIHttplocalhosttipCalcWindow UIHttplocalhosttipCalcWindow
        {
            get
            {
                if ((this.mUIHttplocalhosttipCalcWindow == null))
                {
                    this.mUIHttplocalhosttipCalcWindow = new UIHttplocalhosttipCalcWindow();
                }
                return this.mUIHttplocalhosttipCalcWindow;
            }
        }
        #endregion
        
        #region Fields
        private AssertNetherlands200BadServiceExpectedValues mAssertNetherlands200BadServiceExpectedValues;
        
        private CalculateNetherlands200Params mCalculateNetherlands200Params;
        
        private UIHttplocalhosttipCalcWindow mUIHttplocalhosttipCalcWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertNetherlands200BadService'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class AssertNetherlands200BadServiceExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'txtTotalAmount' text box equals '210'
        /// </summary>
        public string UITxtTotalAmountEditText = "210";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CalculateNetherlands200'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class CalculateNetherlands200Params
    {
        
        #region Fields
        /// <summary>
        /// Select 'Netherlands' in 'ddlCountry' combo box
        /// </summary>
        public string UIDdlCountryComboBoxSelectedItem = "Netherlands";
        
        /// <summary>
        /// Type '200' in 'txtBilAMount' text box
        /// </summary>
        public string UITxtBilAMountEditText = "200";
        
        /// <summary>
        /// Select 'Bad' in 'ddlQOS' combo box
        /// </summary>
        public string UIDdlQOSComboBoxSelectedItem = "Bad";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIHttplocalhosttipCalcWindow : BrowserWindow
    {
        
        public UIHttplocalhosttipCalcWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "http://localhost/tipCalculator/calculatetip.aspx";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("http://localhost/tipCalculator/calculatetip.aspx");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIHttplocalhosttipCalcDocument UIHttplocalhosttipCalcDocument
        {
            get
            {
                if ((this.mUIHttplocalhosttipCalcDocument == null))
                {
                    this.mUIHttplocalhosttipCalcDocument = new UIHttplocalhosttipCalcDocument(this);
                }
                return this.mUIHttplocalhosttipCalcDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIHttplocalhosttipCalcDocument mUIHttplocalhosttipCalcDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIHttplocalhosttipCalcDocument : HtmlDocument
    {
        
        public UIHttplocalhosttipCalcDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/tipCalculator/calculatetip.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost/tipCalculator/calculatetip.aspx";
            this.WindowTitles.Add("http://localhost/tipCalculator/calculatetip.aspx");
            #endregion
        }
        
        #region Properties
        public HtmlComboBox UIDdlCountryComboBox
        {
            get
            {
                if ((this.mUIDdlCountryComboBox == null))
                {
                    this.mUIDdlCountryComboBox = new HtmlComboBox(this);
                    #region Search Criteria
                    this.mUIDdlCountryComboBox.SearchProperties[HtmlComboBox.PropertyNames.Id] = "ddlCountry";
                    this.mUIDdlCountryComboBox.SearchProperties[HtmlComboBox.PropertyNames.Name] = "ddlCountry";
                    this.mUIDdlCountryComboBox.FilterProperties[HtmlComboBox.PropertyNames.LabeledBy] = null;
                    this.mUIDdlCountryComboBox.FilterProperties[HtmlComboBox.PropertyNames.Size] = "0";
                    this.mUIDdlCountryComboBox.FilterProperties[HtmlComboBox.PropertyNames.Title] = null;
                    this.mUIDdlCountryComboBox.FilterProperties[HtmlComboBox.PropertyNames.ItemCount] = "5";
                    this.mUIDdlCountryComboBox.FilterProperties[HtmlComboBox.PropertyNames.Class] = null;
                    this.mUIDdlCountryComboBox.FilterProperties[HtmlComboBox.PropertyNames.ControlDefinition] = "name=\"ddlCountry\" id=\"ddlCountry\"";
                    this.mUIDdlCountryComboBox.FilterProperties[HtmlComboBox.PropertyNames.TagInstance] = "1";
                    this.mUIDdlCountryComboBox.WindowTitles.Add("http://localhost/tipCalculator/calculatetip.aspx");
                    #endregion
                }
                return this.mUIDdlCountryComboBox;
            }
        }
        
        public HtmlEdit UITxtBilAMountEdit
        {
            get
            {
                if ((this.mUITxtBilAMountEdit == null))
                {
                    this.mUITxtBilAMountEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUITxtBilAMountEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "txtBilAMount";
                    this.mUITxtBilAMountEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "txtBilAMount";
                    this.mUITxtBilAMountEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUITxtBilAMountEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUITxtBilAMountEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUITxtBilAMountEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUITxtBilAMountEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"txtBilAMount\" id=\"txtBilAMount\" ty";
                    this.mUITxtBilAMountEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "3";
                    this.mUITxtBilAMountEdit.WindowTitles.Add("http://localhost/tipCalculator/calculatetip.aspx");
                    #endregion
                }
                return this.mUITxtBilAMountEdit;
            }
        }
        
        public HtmlComboBox UIDdlQOSComboBox
        {
            get
            {
                if ((this.mUIDdlQOSComboBox == null))
                {
                    this.mUIDdlQOSComboBox = new HtmlComboBox(this);
                    #region Search Criteria
                    this.mUIDdlQOSComboBox.SearchProperties[HtmlComboBox.PropertyNames.Id] = "ddlQOS";
                    this.mUIDdlQOSComboBox.SearchProperties[HtmlComboBox.PropertyNames.Name] = "ddlQOS";
                    this.mUIDdlQOSComboBox.FilterProperties[HtmlComboBox.PropertyNames.LabeledBy] = null;
                    this.mUIDdlQOSComboBox.FilterProperties[HtmlComboBox.PropertyNames.Size] = "0";
                    this.mUIDdlQOSComboBox.FilterProperties[HtmlComboBox.PropertyNames.Title] = null;
                    this.mUIDdlQOSComboBox.FilterProperties[HtmlComboBox.PropertyNames.ItemCount] = "3";
                    this.mUIDdlQOSComboBox.FilterProperties[HtmlComboBox.PropertyNames.Class] = null;
                    this.mUIDdlQOSComboBox.FilterProperties[HtmlComboBox.PropertyNames.ControlDefinition] = "name=\"ddlQOS\" id=\"ddlQOS\"";
                    this.mUIDdlQOSComboBox.FilterProperties[HtmlComboBox.PropertyNames.TagInstance] = "3";
                    this.mUIDdlQOSComboBox.WindowTitles.Add("http://localhost/tipCalculator/calculatetip.aspx");
                    #endregion
                }
                return this.mUIDdlQOSComboBox;
            }
        }
        
        public HtmlInputButton UICalculateTipButton
        {
            get
            {
                if ((this.mUICalculateTipButton == null))
                {
                    this.mUICalculateTipButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUICalculateTipButton.SearchProperties[HtmlButton.PropertyNames.Id] = "Button1";
                    this.mUICalculateTipButton.SearchProperties[HtmlButton.PropertyNames.Name] = "Button1";
                    this.mUICalculateTipButton.FilterProperties[HtmlButton.PropertyNames.DisplayText] = "Calculate Tip";
                    this.mUICalculateTipButton.FilterProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUICalculateTipButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUICalculateTipButton.FilterProperties[HtmlButton.PropertyNames.Class] = null;
                    this.mUICalculateTipButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "name=\"Button1\" id=\"Button1\" type=\"submit";
                    this.mUICalculateTipButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "6";
                    this.mUICalculateTipButton.WindowTitles.Add("http://localhost/tipCalculator/calculatetip.aspx");
                    #endregion
                }
                return this.mUICalculateTipButton;
            }
        }
        
        public HtmlEdit UITxtTotalAmountEdit
        {
            get
            {
                if ((this.mUITxtTotalAmountEdit == null))
                {
                    this.mUITxtTotalAmountEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUITxtTotalAmountEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "txtTotalAmount";
                    this.mUITxtTotalAmountEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "txtTotalAmount";
                    this.mUITxtTotalAmountEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUITxtTotalAmountEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUITxtTotalAmountEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUITxtTotalAmountEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUITxtTotalAmountEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"txtTotalAmount\" id=\"txtTotalAmount";
                    this.mUITxtTotalAmountEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "5";
                    this.mUITxtTotalAmountEdit.WindowTitles.Add("http://localhost/tipCalculator/calculatetip.aspx");
                    #endregion
                }
                return this.mUITxtTotalAmountEdit;
            }
        }
        #endregion
        
        #region Fields
        private HtmlComboBox mUIDdlCountryComboBox;
        
        private HtmlEdit mUITxtBilAMountEdit;
        
        private HtmlComboBox mUIDdlQOSComboBox;
        
        private HtmlInputButton mUICalculateTipButton;
        
        private HtmlEdit mUITxtTotalAmountEdit;
        #endregion
    }
}

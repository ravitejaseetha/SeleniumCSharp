// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 11.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace SmartMatchDemo.DefaultClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public partial class Default
    {
        
        /// <summary>
        /// EnterTextValue - Use 'EnterTextValueParams' to pass parameters into this method.
        /// </summary>
        public void EnterTextValue()
        {
            #region Variable Declarations
            HtmlEdit uITextBox1Edit = this.UIInbox50InternetExploWindow.UIInbox50Document.UITextBox1Edit;
            HtmlInputButton uIButtonButton = this.UIInbox50InternetExploWindow.UIInbox50Document.UIButtonButton;
            #endregion

            // Type 'This is a Test' in 'TextBox1' text box
            uITextBox1Edit.Text = this.EnterTextValueParams.UITextBox1EditText;

            // Click 'Button' button
            Mouse.Click(uIButtonButton, new Point(39, 11));
        }
        
        /// <summary>
        /// AssertLabelValue - Use 'AssertLabelValueExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertLabelValue()
        {
            #region Variable Declarations
            HtmlSpan uITestPane = this.UIInbox54InternetExploWindow.UIInbox54Document.UITestPane;
            #endregion

            // Verify that the 'InnerText' property of 'test' pane equals 'test'
            Assert.AreEqual(this.AssertLabelValueExpectedValues.UITestPaneInnerText, uITestPane.InnerText);
        }
        
        #region Properties
        public virtual EnterTextValueParams EnterTextValueParams
        {
            get
            {
                if ((this.mEnterTextValueParams == null))
                {
                    this.mEnterTextValueParams = new EnterTextValueParams();
                }
                return this.mEnterTextValueParams;
            }
        }
        
        public virtual AssertLabelValueExpectedValues AssertLabelValueExpectedValues
        {
            get
            {
                if ((this.mAssertLabelValueExpectedValues == null))
                {
                    this.mAssertLabelValueExpectedValues = new AssertLabelValueExpectedValues();
                }
                return this.mAssertLabelValueExpectedValues;
            }
        }
        
        public UIInbox50InternetExploWindow UIInbox50InternetExploWindow
        {
            get
            {
                if ((this.mUIInbox50InternetExploWindow == null))
                {
                    this.mUIInbox50InternetExploWindow = new UIInbox50InternetExploWindow();
                }
                return this.mUIInbox50InternetExploWindow;
            }
        }
        
        public UIInbox54InternetExploWindow UIInbox54InternetExploWindow
        {
            get
            {
                if ((this.mUIInbox54InternetExploWindow == null))
                {
                    this.mUIInbox54InternetExploWindow = new UIInbox54InternetExploWindow();
                }
                return this.mUIInbox54InternetExploWindow;
            }
        }
        #endregion
        
        #region Fields
        private EnterTextValueParams mEnterTextValueParams;
        
        private AssertLabelValueExpectedValues mAssertLabelValueExpectedValues;
        
        private UIInbox50InternetExploWindow mUIInbox50InternetExploWindow;
        
        private UIInbox54InternetExploWindow mUIInbox54InternetExploWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EnterTextValue'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class EnterTextValueParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'This is a Test' in 'TextBox1' text box
        /// </summary>
        public string UITextBox1EditText = "This is a Test";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertLabelValue'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class AssertLabelValueExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'test' pane equals 'test'
        /// </summary>
        public string UITestPaneInnerText = "test";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIInbox50InternetExploWindow : BrowserWindow
    {
        
        public UIInbox50InternetExploWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Inbox (50)";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Inbox (50)");
            this.WindowTitles.Add("Inbox (41)");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIInbox50Document UIInbox50Document
        {
            get
            {
                if ((this.mUIInbox50Document == null))
                {
                    this.mUIInbox50Document = new UIInbox50Document(this);
                }
                return this.mUIInbox50Document;
            }
        }
        
        public UIInbox41Document UIInbox41Document
        {
            get
            {
                if ((this.mUIInbox41Document == null))
                {
                    this.mUIInbox41Document = new UIInbox41Document(this);
                }
                return this.mUIInbox41Document;
            }
        }
        #endregion
        
        #region Fields
        private UIInbox50Document mUIInbox50Document;
        
        private UIInbox41Document mUIInbox41Document;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIInbox50Document : HtmlDocument
    {
        
        public UIInbox50Document(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Inbox (50)";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/default.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:16786/default.aspx";
            this.WindowTitles.Add("Inbox (50)");
            #endregion
        }
        
        #region Properties
        public HtmlEdit UITextBox1Edit
        {
            get
            {
                if ((this.mUITextBox1Edit == null))
                {
                    this.mUITextBox1Edit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUITextBox1Edit.SearchProperties[HtmlEdit.PropertyNames.Id] = "TextBox1";
                    this.mUITextBox1Edit.SearchProperties[HtmlEdit.PropertyNames.Name] = "TextBox1";
                    this.mUITextBox1Edit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUITextBox1Edit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUITextBox1Edit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUITextBox1Edit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUITextBox1Edit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"TextBox1\" id=\"TextBox1\" type=\"text";
                    this.mUITextBox1Edit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "3";
                    this.mUITextBox1Edit.WindowTitles.Add("Inbox (50)");
                    #endregion
                }
                return this.mUITextBox1Edit;
            }
        }
        
        public HtmlInputButton UIButtonButton
        {
            get
            {
                if ((this.mUIButtonButton == null))
                {
                    this.mUIButtonButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUIButtonButton.SearchProperties[HtmlButton.PropertyNames.Id] = "Button1";
                    this.mUIButtonButton.SearchProperties[HtmlButton.PropertyNames.Name] = "Button1";
                    this.mUIButtonButton.FilterProperties[HtmlButton.PropertyNames.DisplayText] = "Button";
                    this.mUIButtonButton.FilterProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUIButtonButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUIButtonButton.FilterProperties[HtmlButton.PropertyNames.Class] = null;
                    this.mUIButtonButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "name=\"Button1\" id=\"Button1\" type=\"submit";
                    this.mUIButtonButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "4";
                    this.mUIButtonButton.WindowTitles.Add("Inbox (50)");
                    #endregion
                }
                return this.mUIButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlEdit mUITextBox1Edit;
        
        private HtmlInputButton mUIButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIInbox41Document : HtmlDocument
    {
        
        public UIInbox41Document(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Inbox (41)";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/default.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:16786/default.aspx";
            this.WindowTitles.Add("Inbox (41)");
            #endregion
        }
        
        #region Properties
        public HtmlSpan LblTestValue
        {
            get
            {
                if ((this.mLblTestValue == null))
                {
                    this.mLblTestValue = new HtmlSpan(this);
                    #region Search Criteria
                    this.mLblTestValue.SearchProperties[HtmlDiv.PropertyNames.Id] = "Label1";
                    this.mLblTestValue.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mLblTestValue.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "This is a Test";
                    this.mLblTestValue.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mLblTestValue.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mLblTestValue.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=\"Label1\"";
                    this.mLblTestValue.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "1";
                    this.mLblTestValue.WindowTitles.Add("Inbox (41)");
                    #endregion
                }
                return this.mLblTestValue;
            }
        }
        #endregion
        
        #region Fields
        private HtmlSpan mLblTestValue;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIInbox54InternetExploWindow : BrowserWindow
    {
        
        public UIInbox54InternetExploWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Inbox (54)";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Inbox (54)");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIInbox54Document UIInbox54Document
        {
            get
            {
                if ((this.mUIInbox54Document == null))
                {
                    this.mUIInbox54Document = new UIInbox54Document(this);
                }
                return this.mUIInbox54Document;
            }
        }
        #endregion
        
        #region Fields
        private UIInbox54Document mUIInbox54Document;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIInbox54Document : HtmlDocument
    {
        
        public UIInbox54Document(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Inbox (54)";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/default.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:16786/default.aspx";
            this.WindowTitles.Add("Inbox (54)");
            #endregion
        }
        
        #region Properties
        public HtmlSpan UITestPane
        {
            get
            {
                if ((this.mUITestPane == null))
                {
                    this.mUITestPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUITestPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "Label1";
                    this.mUITestPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUITestPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "test";
                    this.mUITestPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUITestPane.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mUITestPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=\"Label1\"";
                    this.mUITestPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "1";
                    this.mUITestPane.WindowTitles.Add("Inbox (54)");
                    #endregion
                }
                return this.mUITestPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlSpan mUITestPane;
        #endregion
    }
}
